/* This file is generated, do not edit! */
package numpy;
@:native("numpy.ndarray") extern class Ndarray {
	private var __abs__ : Dynamic;
	private var __add__ : Dynamic;
	private var __and__ : Dynamic;
	private function __array__(dtype:Dynamic):Void;
	private function __array_wrap__(obj:Dynamic):Void;
	private var __contains__ : Dynamic;
	private function __copy__(order:Dynamic):Void;
	private function __deepcopy__():Void;
	private var __divmod__ : Dynamic;
	private var __eq__ : Dynamic;
	private var __float__ : Dynamic;
	private var __floordiv__ : Dynamic;
	private var __ge__ : Dynamic;
	private var __getitem__ : Dynamic;
	private var __gt__ : Dynamic;
	private var __iadd__ : Dynamic;
	private var __iand__ : Dynamic;
	private var __ifloordiv__ : Dynamic;
	private var __ilshift__ : Dynamic;
	private var __imod__ : Dynamic;
	private var __imul__ : Dynamic;
	private var __int__ : Dynamic;
	private var __invert__ : Dynamic;
	private var __ior__ : Dynamic;
	private var __ipow__ : Dynamic;
	private var __irshift__ : Dynamic;
	private var __isub__ : Dynamic;
	private var __itruediv__ : Dynamic;
	private var __ixor__ : Dynamic;
	private var __le__ : Dynamic;
	private var __len__ : Dynamic;
	private var __lshift__ : Dynamic;
	private var __lt__ : Dynamic;
	private var __matmul__ : Dynamic;
	private var __mod__ : Dynamic;
	private var __mul__ : Dynamic;
	private var __ne__ : Dynamic;
	private var __neg__ : Dynamic;
	private function __new__():Void;
	private var __or__ : Dynamic;
	private var __pos__ : Dynamic;
	private var __pow__ : Dynamic;
	private function __reduce__():Void;
	private var __repr__ : Dynamic;
	private var __rshift__ : Dynamic;
	private var __setitem__ : Dynamic;
	private function __setstate__(version:Dynamic, shape:Dynamic, dtype:Dynamic, isfortran:Dynamic, rawdata:Dynamic):Void;
	private var __str__ : Dynamic;
	private var __sub__ : Dynamic;
	private var __truediv__ : Dynamic;
	private var __xor__ : Dynamic;
	public function all(?axis:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public function any(?axis:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public function argmax(?axis:Dynamic = null, ?out:Dynamic = null):Void;
	public function argmin(?axis:Dynamic = null, ?out:Dynamic = null):Void;
	public function argpartition(kth:Dynamic, ?axis:Dynamic, ?kind:Dynamic, ?order:Dynamic = null):Void;
	public function argsort(?axis:Dynamic, ?kind:Dynamic, ?order:Dynamic = null):Void;
	public function astype(dtype:Dynamic, ?order:Dynamic, ?casting:Dynamic, ?subok:Dynamic = true, ?copy:Dynamic = true):Dynamic;
	public var base : Dynamic;
	public function byteswap(inplace:Dynamic):Dynamic;
	public function choose(choices:Dynamic, ?out:Dynamic = null, ?mode:Dynamic):Void;
	public function clip(?min:Dynamic = null, ?max:Dynamic = null, ?out:Dynamic = null):Void;
	public function compress(condition:Dynamic, ?axis:Dynamic = null, ?out:Dynamic = null):Void;
	public function conj():Void;
	public function conjugate():Void;
	public function copy(?order:Dynamic):Void;
	public var ctypes : Dynamic;
	public function cumprod(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null):Void;
	public function cumsum(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null):Void;
	public var data : Dynamic;
	public function diagonal(?offset:Dynamic, ?axis1:Dynamic, ?axis2:Dynamic):Void;
	public function dot(b:Dynamic, ?out:Dynamic = null):Void;
	public var dtype : Dynamic;
	public function dump(file:Dynamic):Void;
	public function dumps():Void;
	public function fill(value:Dynamic):Void;
	public var flags : Dynamic;
	public var flat : Dynamic;
	public function flatten(?order:Dynamic):Dynamic;
	public function getfield(dtype:Dynamic, ?offset:Dynamic):Void;
	public var imag : Dynamic;
	public function item(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function itemset(args:haxe.extern.Rest<Dynamic>):Void;
	public var itemsize : Dynamic;
	public function max(?axis:Dynamic = null, ?out:Dynamic = null):Void;
	public function mean(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public function min(?axis:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public var nbytes : Dynamic;
	public var ndim : Dynamic;
	public function newbyteorder(?new_order:Dynamic):Dynamic;
	public function nonzero():Void;
	public function partition(kth:Dynamic, ?axis:Dynamic, ?kind:Dynamic, ?order:Dynamic = null):Void;
	public function prod(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public function ptp(?axis:Dynamic = null, ?out:Dynamic = null):Void;
	public function put(indices:Dynamic, values:Dynamic, ?mode:Dynamic):Void;
	public function ravel(order:Dynamic):Void;
	public var real : Dynamic;
	public function repeat(repeats:Dynamic, ?axis:Dynamic = null):Void;
	public function reshape(shape:Dynamic, ?order:Dynamic):Void;
	public function resize(new_shape:Dynamic, ?refcheck:Dynamic = true):Dynamic;
	public function round(?decimals:Dynamic, ?out:Dynamic = null):Void;
	public function searchsorted(v:Dynamic, ?side:Dynamic, ?sorter:Dynamic = null):Void;
	public function setfield(val:Dynamic, dtype:Dynamic, ?offset:Dynamic):Dynamic;
	public function setflags(?write:Dynamic = null, ?align:Dynamic = null, ?uic:Dynamic = null):Void;
	public var shape : Dynamic;
	public var size : Dynamic;
	public function sort(?axis:Dynamic, ?kind:Dynamic, ?order:Dynamic = null):Void;
	public function squeeze(?axis:Dynamic = null):Void;
	public function std(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null, ?ddof:Dynamic, ?keepdims:Dynamic = false):Void;
	public var strides : Dynamic;
	public function sum(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null, ?keepdims:Dynamic = false):Void;
	public function swapaxes(axis1:Dynamic, axis2:Dynamic):Void;
	public var T : Dynamic;
	public function take(indices:Dynamic, ?axis:Dynamic = null, ?out:Dynamic = null, ?mode:Dynamic):Void;
	public function tobytes(?order:Dynamic):Dynamic;
	public function tofile(fid:Dynamic, ?sep:Dynamic, ?format:Dynamic):Void;
	public function tolist():Dynamic;
	public function tostring(?order:Dynamic):Dynamic;
	public function trace(?offset:Dynamic, ?axis1:Dynamic, ?axis2:Dynamic, ?dtype:Dynamic = null, ?out:Dynamic = null):Void;
	public function transpose(args:haxe.extern.Rest<Dynamic>):Dynamic;
	@:native("var")
	public function _var(?axis:Dynamic = null, ?dtype:Dynamic = null, ?out:Dynamic = null, ?ddof:Dynamic, ?keepdims:Dynamic = false):Void;
	public function view(?dtype:Dynamic = null, ?type:Dynamic = null):Void;
}