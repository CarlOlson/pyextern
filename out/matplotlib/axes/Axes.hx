/* This file is generated, do not edit! */
package matplotlib.axes;
@:native("matplotlib.axes.Axes") extern class Axes {
	public function acorr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function add_artist(a:Dynamic):Void;
	public function add_callback(func:Dynamic):Void;
	public function add_collection(collection:Dynamic, ?autolim:Dynamic = true):Void;
	public function add_container(container:Dynamic):Void;
	public function add_image(image:Dynamic):Void;
	public function add_line(line:Dynamic):Void;
	public function add_patch(p:Dynamic):Void;
	public function add_table(tab:Dynamic):Void;
	public var aname : Dynamic;
	public function angle_spectrum(args:haxe.extern.Rest<Dynamic>):Void;
	public function annotate(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function apply_aspect(?position:Dynamic = null):Void;
	public function arrow(args:haxe.extern.Rest<Dynamic>):Void;
	public function autoscale(?enable:Dynamic = true, ?axis:Dynamic, ?tight:Dynamic = null):Void;
	public function autoscale_view(?tight:Dynamic = null, ?scalex:Dynamic = true, ?scaley:Dynamic = true):Void;
	public function axhline(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function axhspan(args:haxe.extern.Rest<Dynamic>):Void;
	public function axis(args:haxe.extern.Rest<Dynamic>):Void;
	public function axvline(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function axvspan(args:haxe.extern.Rest<Dynamic>):Void;
	public function bar(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function barbs(args:haxe.extern.Rest<Dynamic>):Void;
	public function barh(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function boxplot(x:Dynamic, ?notch:Dynamic = false, ?sym:Dynamic = null, ?vert:Dynamic = true, ?whis:Dynamic, ?positions:Dynamic = null, ?widths:Dynamic = null, ?patch_artist:Dynamic = false, ?bootstrap:Dynamic = null, ?usermedians:Dynamic = null, ?conf_intervals:Dynamic = null, ?meanline:Dynamic = false, ?showmeans:Dynamic = false, ?showcaps:Dynamic = true, ?showbox:Dynamic = true, ?showfliers:Dynamic = true, ?boxprops:Dynamic = null, ?labels:Dynamic = null, ?flierprops:Dynamic = null, ?medianprops:Dynamic = null, ?meanprops:Dynamic = null, ?capprops:Dynamic = null, ?whiskerprops:Dynamic = null, ?manage_xticks:Dynamic = true):Dynamic;
	public function broken_barh(args:haxe.extern.Rest<Dynamic>):Void;
	public function bxp(bxpstats:Dynamic, ?positions:Dynamic = null, ?widths:Dynamic = null, ?vert:Dynamic = true, ?patch_artist:Dynamic = false, ?shownotches:Dynamic = false, ?showmeans:Dynamic = false, ?showcaps:Dynamic = true, ?showbox:Dynamic = true, ?showfliers:Dynamic = true, ?boxprops:Dynamic = null, ?whiskerprops:Dynamic = null, ?flierprops:Dynamic = null, ?medianprops:Dynamic = null, ?capprops:Dynamic = null, ?meanprops:Dynamic = null, ?meanline:Dynamic = false, ?manage_xticks:Dynamic = true):Dynamic;
	public function can_pan():Void;
	public function can_zoom():Void;
	public function cla():Void;
	public function clabel(args:haxe.extern.Rest<Dynamic>):Void;
	public function clear():Void;
	public function cohere(args:haxe.extern.Rest<Dynamic>):Void;
	public function contains(mouseevent:Dynamic):Void;
	public function contains_point(point:Dynamic):Void;
	public function contour(args:haxe.extern.Rest<Dynamic>):Void;
	public function contourf(args:haxe.extern.Rest<Dynamic>):Void;
	public function convert_xunits(x:Dynamic):Void;
	public function convert_yunits(y:Dynamic):Void;
	public function csd(args:haxe.extern.Rest<Dynamic>):Void;
	public function drag_pan(button:Dynamic, key:Dynamic, x:Dynamic, y:Dynamic):Void;
	public function draw(args:haxe.extern.Rest<Dynamic>):Void;
	public function draw_artist(a:Dynamic):Void;
	public function end_pan():Void;
	public function errorbar(args:haxe.extern.Rest<Dynamic>):Void;
	public function eventplot(args:haxe.extern.Rest<Dynamic>):Void;
	public function fill(args:haxe.extern.Rest<Dynamic>):Void;
	public function fill_between(args:haxe.extern.Rest<Dynamic>):Void;
	public function fill_betweenx(args:haxe.extern.Rest<Dynamic>):Void;
	public function findobj(?match:Dynamic = null, ?include_self:Dynamic = true):Void;
	public function format_coord(x:Dynamic, y:Dynamic):Void;
	public function format_xdata(x:Dynamic):Void;
	public function format_ydata(y:Dynamic):Void;
	public function get_adjustable():Void;
	public function get_agg_filter():Void;
	public function get_alpha():Void;
	public function get_anchor():Void;
	public function get_animated():Void;
	public function get_aspect():Void;
	public function get_autoscale_on():Void;
	public function get_autoscalex_on():Void;
	public function get_autoscaley_on():Void;
	public function get_axes():Void;
	public function get_axes_locator():Void;
	public function get_axis_bgcolor():Void;
	public function get_axisbelow():Void;
	public function get_children():Void;
	public function get_clip_box():Void;
	public function get_clip_on():Void;
	public function get_clip_path():Void;
	public function get_contains():Void;
	public function get_cursor_props():Void;
	public function get_data_ratio():Void;
	public function get_data_ratio_log():Void;
	public function get_default_bbox_extra_artists():Void;
	public function get_figure():Void;
	public function get_frame_on():Void;
	public function get_gid():Void;
	public function get_images():Void;
	public function get_label():Void;
	public function get_legend():Void;
	public function get_legend_handles_labels(?legend_handler_map:Dynamic = null):Void;
	public function get_lines():Void;
	public function get_navigate():Void;
	public function get_navigate_mode():Void;
	public function get_path_effects():Void;
	public function get_picker():Void;
	public function get_position(?original:Dynamic = false):Void;
	public function get_rasterization_zorder():Void;
	public function get_rasterized():Void;
	public function get_renderer_cache():Void;
	public function get_shared_x_axes():Void;
	public function get_shared_y_axes():Void;
	public function get_sketch_params():Dynamic;
	public function get_snap():Void;
	public function get_tightbbox(renderer:Dynamic, ?call_axes_locator:Dynamic = true):Void;
	public function get_title(?loc:Dynamic):Dynamic;
	public function get_transform():Void;
	public function get_transformed_clip_path_and_affine():Void;
	public function get_url():Void;
	public function get_visible():Void;
	public function get_window_extent(args:haxe.extern.Rest<Dynamic>):Void;
	public function get_xaxis():Void;
	public function get_xaxis_text1_transform(pad_points:Dynamic):Void;
	public function get_xaxis_text2_transform(pad_points:Dynamic):Void;
	public function get_xaxis_transform(?which:Dynamic):Void;
	public function get_xbound():Void;
	public function get_xgridlines():Void;
	public function get_xlabel():Void;
	public function get_xlim():Void;
	public function get_xmajorticklabels():Void;
	public function get_xminorticklabels():Void;
	public function get_xscale():Void;
	public function get_xticklabels(?minor:Dynamic = false, ?which:Dynamic = null):Dynamic;
	public function get_xticklines():Void;
	public function get_xticks(?minor:Dynamic = false):Void;
	public function get_yaxis():Void;
	public function get_yaxis_text1_transform(pad_points:Dynamic):Void;
	public function get_yaxis_text2_transform(pad_points:Dynamic):Void;
	public function get_yaxis_transform(?which:Dynamic):Void;
	public function get_ybound():Void;
	public function get_ygridlines():Void;
	public function get_ylabel():Void;
	public function get_ylim():Void;
	public function get_ymajorticklabels():Void;
	public function get_yminorticklabels():Void;
	public function get_yscale():Void;
	public function get_yticklabels(?minor:Dynamic = false, ?which:Dynamic = null):Dynamic;
	public function get_yticklines():Void;
	public function get_yticks(?minor:Dynamic = false):Void;
	public function get_zorder():Void;
	public function grid(args:haxe.extern.Rest<Dynamic>):Void;
	public function has_data():Void;
	public function have_units():Void;
	public function hexbin(args:haxe.extern.Rest<Dynamic>):Void;
	public function hist(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function hist2d(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function hitlist(event:Dynamic):Void;
	public function hlines(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function hold(?b:Dynamic = null):Void;
	public function imshow(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function in_axes(mouseevent:Dynamic):Void;
	public function invert_xaxis():Void;
	public function invert_yaxis():Void;
	public function is_figure_set():Void;
	public function is_transform_set():Void;
	public function ishold():Void;
	public function legend(args:haxe.extern.Rest<Dynamic>):Void;
	public function locator_params(args:haxe.extern.Rest<Dynamic>):Void;
	public function loglog(args:haxe.extern.Rest<Dynamic>):Void;
	public function magnitude_spectrum(args:haxe.extern.Rest<Dynamic>):Void;
	public function margins(args:haxe.extern.Rest<Dynamic>):Void;
	public function matshow(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function minorticks_off():Void;
	public function minorticks_on():Void;
	public var name : Dynamic;
	public function pchanged():Void;
	public function pcolor(args:haxe.extern.Rest<Dynamic>):Void;
	public function pcolorfast(args:haxe.extern.Rest<Dynamic>):Void;
	public function pcolormesh(args:haxe.extern.Rest<Dynamic>):Void;
	public function phase_spectrum(args:haxe.extern.Rest<Dynamic>):Void;
	public function pick(args:haxe.extern.Rest<Dynamic>):Void;
	public function pickable():Void;
	public function pie(x:Dynamic, ?explode:Dynamic = null, ?labels:Dynamic = null, ?colors:Dynamic = null, ?autopct:Dynamic = null, ?pctdistance:Dynamic, ?shadow:Dynamic = false, ?labeldistance:Dynamic, ?startangle:Dynamic = null, ?radius:Dynamic = null, ?counterclock:Dynamic = true, ?wedgeprops:Dynamic = null, ?textprops:Dynamic = null):Void;
	public function plot(args:haxe.extern.Rest<Dynamic>):Void;
	public function plot_date(args:haxe.extern.Rest<Dynamic>):Void;
	public function properties():Void;
	public function psd(args:haxe.extern.Rest<Dynamic>):Void;
	public function quiver(args:haxe.extern.Rest<Dynamic>):Void;
	public function quiverkey(args:haxe.extern.Rest<Dynamic>):Void;
	public function redraw_in_frame():Void;
	public function relim(?visible_only:Dynamic = false):Void;
	public function remove():Void;
	public function remove_callback(oid:Dynamic):Void;
	public function reset_position():Void;
	public function scatter(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function semilogx(args:haxe.extern.Rest<Dynamic>):Void;
	public function semilogy(args:haxe.extern.Rest<Dynamic>):Void;
	public function set(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_adjustable(adjustable:Dynamic):Void;
	public function set_agg_filter(filter_func:Dynamic):Void;
	public function set_alpha(alpha:Dynamic):Void;
	public function set_anchor(anchor:Dynamic):Void;
	public function set_animated(b:Dynamic):Void;
	public function set_aspect(aspect:Dynamic, ?adjustable:Dynamic = null, ?anchor:Dynamic = null):Void;
	public function set_autoscale_on(b:Dynamic):Void;
	public function set_autoscalex_on(b:Dynamic):Void;
	public function set_autoscaley_on(b:Dynamic):Void;
	public function set_axes(axes:Dynamic):Void;
	public function set_axes_locator(locator:Dynamic):Void;
	public function set_axis_bgcolor(color:Dynamic):Void;
	public function set_axis_off():Void;
	public function set_axis_on():Void;
	public function set_axisbelow(b:Dynamic):Void;
	public function set_clip_box(clipbox:Dynamic):Void;
	public function set_clip_on(b:Dynamic):Void;
	public function set_clip_path(path:Dynamic, ?transform:Dynamic = null):Void;
	public function set_color_cycle(clist:Dynamic):Void;
	public function set_contains(picker:Dynamic):Void;
	public function set_cursor_props(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_figure(fig:Dynamic):Void;
	public function set_frame_on(b:Dynamic):Void;
	public function set_gid(gid:Dynamic):Void;
	public function set_label(s:Dynamic):Void;
	public function set_lod(on:Dynamic):Void;
	public function set_navigate(b:Dynamic):Void;
	public function set_navigate_mode(b:Dynamic):Void;
	public function set_path_effects(path_effects:Dynamic):Void;
	public function set_picker(picker:Dynamic):Void;
	public function set_position(pos:Dynamic, ?which:Dynamic):Void;
	public function set_rasterization_zorder(z:Dynamic):Void;
	public function set_rasterized(rasterized:Dynamic):Void;
	public function set_sketch_params(?scale:Dynamic = null, ?length:Dynamic = null, ?randomness:Dynamic = null):Void;
	public function set_snap(snap:Dynamic):Void;
	public function set_title(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function set_transform(t:Dynamic):Void;
	public function set_url(url:Dynamic):Void;
	public function set_visible(b:Dynamic):Void;
	public function set_xbound(?lower:Dynamic = null, ?upper:Dynamic = null):Void;
	public function set_xlabel(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_xlim(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_xmargin(m:Dynamic):Void;
	public function set_xscale(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_xticklabels(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_xticks(ticks:Dynamic, ?minor:Dynamic = false):Void;
	public function set_ybound(?lower:Dynamic = null, ?upper:Dynamic = null):Void;
	public function set_ylabel(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_ylim(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_ymargin(m:Dynamic):Void;
	public function set_yscale(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_yticklabels(args:haxe.extern.Rest<Dynamic>):Void;
	public function set_yticks(ticks:Dynamic, ?minor:Dynamic = false):Void;
	public function set_zorder(level:Dynamic):Void;
	public function specgram(args:haxe.extern.Rest<Dynamic>):Void;
	public function spy(args:haxe.extern.Rest<Dynamic>):Void;
	public function stackplot(args:haxe.extern.Rest<Dynamic>):Void;
	public function start_pan(x:Dynamic, y:Dynamic, button:Dynamic):Void;
	public function stem(args:haxe.extern.Rest<Dynamic>):Void;
	public function step(args:haxe.extern.Rest<Dynamic>):Void;
	public function streamplot(x:Dynamic, y:Dynamic, u:Dynamic, v:Dynamic, ?density:Dynamic, ?linewidth:Dynamic = null, ?color:Dynamic = null, ?cmap:Dynamic = null, ?norm:Dynamic = null, ?arrowsize:Dynamic, ?arrowstyle:Dynamic, ?minlength:Dynamic, ?transform:Dynamic = null, ?zorder:Dynamic):Void;
	public function table(args:haxe.extern.Rest<Dynamic>):Void;
	public function text(args:haxe.extern.Rest<Dynamic>):Void;
	public function tick_params(args:haxe.extern.Rest<Dynamic>):Void;
	public function ticklabel_format(args:haxe.extern.Rest<Dynamic>):Void;
	public function tricontour(args:haxe.extern.Rest<Dynamic>):Void;
	public function tricontourf(args:haxe.extern.Rest<Dynamic>):Void;
	public function tripcolor(args:haxe.extern.Rest<Dynamic>):Void;
	public function triplot(args:haxe.extern.Rest<Dynamic>):Void;
	public function twinx():Void;
	public function twiny():Void;
	public function update(props:Dynamic):Void;
	public function update_datalim(xys:Dynamic, ?updatex:Dynamic = true, ?updatey:Dynamic = true):Void;
	public function update_datalim_bounds(bounds:Dynamic):Void;
	public function update_datalim_numerix(x:Dynamic, y:Dynamic):Void;
	public function update_from(other:Dynamic):Void;
	public function violin(vpstats:Dynamic, ?positions:Dynamic = null, ?vert:Dynamic = true, ?widths:Dynamic, ?showmeans:Dynamic = false, ?showextrema:Dynamic = true, ?showmedians:Dynamic = false):Dynamic;
	public function violinplot(dataset:Dynamic, ?positions:Dynamic = null, ?vert:Dynamic = true, ?widths:Dynamic, ?showmeans:Dynamic = false, ?showextrema:Dynamic = true, ?showmedians:Dynamic = false, ?points:Dynamic, ?bw_method:Dynamic = null):Dynamic;
	public function vlines(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function xaxis_date(?tz:Dynamic = null):Void;
	public function xaxis_inverted():Void;
	public function xcorr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	public function yaxis_date(?tz:Dynamic = null):Void;
	public function yaxis_inverted():Void;
	public var zorder : Dynamic;
}