/* This file is generated, do not edit! */
package matplotlib.path;
@:native("matplotlib.path.Path") extern class Path {
	public var CLOSEPOLY : Dynamic;
	public var CURVE3 : Dynamic;
	public var CURVE4 : Dynamic;
	public var LINETO : Dynamic;
	public var MOVETO : Dynamic;
	public var NUM_VERTICES_FOR_CODE : Dynamic;
	public var STOP : Dynamic;
	static public function arc(theta1:Dynamic, theta2:Dynamic, ?n:Dynamic = null, ?is_wedge:Dynamic = false):Void;
	static public function circle():Void;
	public function cleaned(?transform:Dynamic = null, ?remove_nans:Dynamic = false, ?clip:Dynamic = null, ?quantize:Dynamic = false, ?simplify:Dynamic = false, ?curves:Dynamic = false, ?stroke_width:Dynamic, ?snap:Dynamic = false, ?sketch:Dynamic = null):Dynamic;
	public function clip_to_bbox(bbox:Dynamic, ?inside:Dynamic = true):Void;
	public var code_type : Dynamic;
	public var codes : Dynamic;
	public function contains_path(path:Dynamic, ?transform:Dynamic = null):Void;
	public function contains_point(point:Dynamic, ?transform:Dynamic = null, ?radius:Dynamic):Void;
	public function contains_points(points:Dynamic, ?transform:Dynamic = null, ?radius:Dynamic):Void;
	public function copy():Void;
	public function deepcopy():Void;
	public function get_extents(?transform:Dynamic = null):Void;
	public var has_nonfinite : Dynamic;
	static public function hatch(hatchpattern:Dynamic, ?density:Dynamic):Void;
	public function interpolated(steps:Dynamic):Void;
	public function intersects_bbox(bbox:Dynamic, ?filled:Dynamic = true):Void;
	public function intersects_path(other:Dynamic, ?filled:Dynamic = true):Void;
	public function iter_segments(?transform:Dynamic = null, ?remove_nans:Dynamic = true, ?clip:Dynamic = null, ?snap:Dynamic = false, ?stroke_width:Dynamic, ?simplify:Dynamic = null, ?curves:Dynamic = true, ?sketch:Dynamic = null):Void;
	static public function make_compound_path(args:haxe.extern.Rest<Dynamic>):Void;
	static public function make_compound_path_from_polys(XY:Dynamic):Void;
	public var readonly : Dynamic;
	public var should_simplify : Dynamic;
	public var simplify_threshold : Dynamic;
	public function to_polygons(?transform:Dynamic = null, ?width:Dynamic, ?height:Dynamic):Void;
	public function transformed(transform:Dynamic):Void;
	static public function unit_circle():Void;
	static public function unit_circle_righthalf():Void;
	static public function unit_rectangle():Void;
	static public function unit_regular_asterisk(numVertices:Dynamic):Void;
	static public function unit_regular_polygon(numVertices:Dynamic):Void;
	static public function unit_regular_star(numVertices:Dynamic, ?innerCircle:Dynamic):Void;
	public var vertices : Dynamic;
	static public function wedge(theta1:Dynamic, theta2:Dynamic, ?n:Dynamic = null):Void;
}