/* This file is generated, do not edit! */
package tensorflow.python.pywrap_tensorflow;
@:pythonImport("tensorflow.python.pywrap_tensorflow") extern class Pywrap_tensorflow_Module {
	static public function Basename(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function CheckpointReader_GetTensor(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function CheckpointReader_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function CopyFile(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function CreateDir(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function CudaSupportsHalfMatMulAndConv(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function DeleteFile(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function DeleteRecursively(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function DeviceFactory_AddDevices(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function DeviceFactory_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function Dirname(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function DoQuantizeTrainingOnGraphDefHelper(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function EqualGraphDefWrapper(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function EventsWriter_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function Extension(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function FileExists(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function FileStatistics_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public var GRAPH_DEF_VERSION : Dynamic;
	static public var GRAPH_DEF_VERSION_MIN_CONSUMER : Dynamic;
	static public var GRAPH_DEF_VERSION_MIN_PRODUCER : Dynamic;
	static public function GetMatchingFiles(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function GetPythonWrappers(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function InitializePyTrampoline(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function IsAbsolutePath(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function IsDirectory(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function IsGoogleCudaEnabled(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function JoinPath(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function NewCheckpointReader(filepattern:Dynamic):Dynamic;
	static public function PickUnusedPortOrDie(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyRecordReader_New(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyRecordReader_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyRecordWriter_New(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyRecordWriter_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyServer_Join(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyServer_New(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyServer_Start(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function PyServer_Stop(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function ReadFileToString(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function RenameFile(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function ServerInterface_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function Stat(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_Buffer_swigregister(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_CloseSession(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_DeleteBuffer(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_DeleteSession(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_DeleteSessionOptions(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_DeleteStatus(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_ExtendGraph(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_GetBuffer(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_GetCode(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_GetOpList(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_LoadLibrary(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_Message(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_NewBuffer(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_NewBufferFromString(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_NewSession(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_NewSessionOptions(?target:Dynamic, ?config:Dynamic):Dynamic;
	static public function TF_NewStatus(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_PRun(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_PRunSetup(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_Reset(target:Dynamic, ?containers:Dynamic, ?config:Dynamic):Dynamic;
	static public function TF_Reset_wrapper(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function TF_Run(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function WriteStringToFile(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function _TF_NewSessionOptions(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function _TF_SetConfig(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function _TF_SetTarget(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public var __builtins__ : Dynamic;
	static public var __cached__ : Dynamic;
	static public var __doc__ : Dynamic;
	static public var __file__ : Dynamic;
	static public var __loader__ : Dynamic;
	static public var __name__ : Dynamic;
	static public var __package__ : Dynamic;
	static public var __spec__ : Dynamic;
	static public var __version__ : Dynamic;
	static public var _newclass : Dynamic;
	static public function _swig_getattr(self:Dynamic, class_type:Dynamic, name:Dynamic):Dynamic;
	static public function _swig_getattr_nondynamic(self:Dynamic, class_type:Dynamic, name:Dynamic, ?_static:Dynamic):Dynamic;
	static public function _swig_repr(self:Dynamic):Dynamic;
	static public function _swig_setattr(self:Dynamic, class_type:Dynamic, name:Dynamic, value:Dynamic):Dynamic;
	static public function _swig_setattr_nondynamic(self:Dynamic, class_type:Dynamic, name:Dynamic, value:Dynamic, ?_static:Dynamic):Dynamic;
	static public function do_quantize_training_on_graphdef(input_graph:Dynamic, num_bits:Dynamic):Dynamic;
}