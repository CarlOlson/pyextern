/* This file is generated, do not edit! */
package scipy;
@:native("scipy.linalg") extern class Linalg {
	static public function block_diag(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function cho_factor(a:Dynamic, ?lower:Dynamic = false, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function cho_solve(c_and_lower:Dynamic, b:Dynamic, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function cho_solve_banded(cb_and_lower:Dynamic, b:Dynamic, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function cholesky(a:Dynamic, ?lower:Dynamic = false, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function cholesky_banded(ab:Dynamic, ?overwrite_ab:Dynamic = false, ?lower:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function circulant(c:Dynamic):Dynamic;
	static public function companion(a:Dynamic):Dynamic;
	static public function coshm(A:Dynamic):Dynamic;
	static public function cosm(A:Dynamic):Dynamic;
	static public function det(a:Dynamic, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function dft(n:Dynamic, ?scale:Dynamic = null):Dynamic;
	static public function diagsvd(s:Dynamic, M:Dynamic, N:Dynamic):Dynamic;
	static public function eig(a:Dynamic, ?b:Dynamic = null, ?left:Dynamic = false, ?right:Dynamic = true, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function eig_banded(a_band:Dynamic, ?lower:Dynamic = false, ?eigvals_only:Dynamic = false, ?overwrite_a_band:Dynamic = false, ?select:Dynamic, ?select_range:Dynamic = null, ?max_ev:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function eigh(a:Dynamic, ?b:Dynamic = null, ?lower:Dynamic = true, ?eigvals_only:Dynamic = false, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?turbo:Dynamic = true, ?eigvals:Dynamic = null, ?type:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function eigvals(a:Dynamic, ?b:Dynamic = null, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function eigvals_banded(a_band:Dynamic, ?lower:Dynamic = false, ?overwrite_a_band:Dynamic = false, ?select:Dynamic, ?select_range:Dynamic = null, ?check_finite:Dynamic = true):Dynamic;
	static public function eigvalsh(a:Dynamic, ?b:Dynamic = null, ?lower:Dynamic = true, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?turbo:Dynamic = true, ?eigvals:Dynamic = null, ?type:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function expm(A:Dynamic, ?q:Dynamic = null):Dynamic;
	static public function expm_cond(A:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function expm_frechet(A:Dynamic, E:Dynamic, ?method:Dynamic = null, ?compute_expm:Dynamic = true, ?check_finite:Dynamic = true):Dynamic;
	static public function find_best_blas_type():Dynamic;
	static public function fractional_matrix_power(A:Dynamic, t:Dynamic):Dynamic;
	static public function funm(A:Dynamic, func:Dynamic, ?disp:Dynamic = true):Dynamic;
	static public function get_blas_funcs(names:Dynamic):Dynamic;
	static public function get_lapack_funcs(names:Dynamic):Dynamic;
	static public function hadamard(n:Dynamic, ?dtype:Dynamic):Dynamic;
	static public function hankel(c:Dynamic, ?r:Dynamic = null):Dynamic;
	static public function helmert(n:Dynamic, ?full:Dynamic = false):Dynamic;
	static public function hessenberg(a:Dynamic, ?calc_q:Dynamic = false, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function hilbert(n:Dynamic):Dynamic;
	static public function inv(a:Dynamic, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function invhilbert(n:Dynamic, ?exact:Dynamic = false):Dynamic;
	static public function invpascal(n:Dynamic, ?kind:Dynamic, ?exact:Dynamic = true):Dynamic;
	static public function kron(a:Dynamic, b:Dynamic):Dynamic;
	static public function leslie(f:Dynamic, s:Dynamic):Dynamic;
	static public function logm(A:Dynamic, ?disp:Dynamic = true):Dynamic;
	static public function lstsq(a:Dynamic, b:Dynamic, ?cond:Dynamic = null, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function lu(a:Dynamic, ?permute_l:Dynamic = false, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function lu_factor(a:Dynamic, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function lu_solve(lu_and_piv:Dynamic, b:Dynamic, ?trans:Dynamic, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function norm(a:Dynamic, ?ord:Dynamic = null):Dynamic;
	static public function orth(A:Dynamic):Dynamic;
	static public function orthogonal_procrustes(A:Dynamic, B:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function pascal(n:Dynamic, ?kind:Dynamic, ?exact:Dynamic = true):Dynamic;
	static public function pinv(a:Dynamic, ?cond:Dynamic = null, ?rcond:Dynamic = null, ?return_rank:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function pinv2(a:Dynamic, ?cond:Dynamic = null, ?rcond:Dynamic = null, ?return_rank:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function pinvh(a:Dynamic, ?cond:Dynamic = null, ?rcond:Dynamic = null, ?lower:Dynamic = true, ?return_rank:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function polar(a:Dynamic, ?side:Dynamic):Dynamic;
	static public function qr(a:Dynamic, ?overwrite_a:Dynamic = false, ?lwork:Dynamic = null, ?mode:Dynamic, ?pivoting:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function qr_delete(Q:Dynamic, R:Dynamic, k:Dynamic, ?p:Dynamic, ?which:Dynamic, ?overwrite_qr:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function qr_insert(Q:Dynamic, R:Dynamic, u:Dynamic, k:Dynamic, ?which:Dynamic, ?rcond:Dynamic = null, ?overwrite_qru:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function qr_multiply(a:Dynamic, c:Dynamic, ?mode:Dynamic, ?pivoting:Dynamic = false, ?conjugate:Dynamic = false, ?overwrite_a:Dynamic = false, ?overwrite_c:Dynamic = false):Dynamic;
	static public function qr_update(Q:Dynamic, R:Dynamic, u:Dynamic, v:Dynamic, ?overwrite_qruv:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function qz(A:Dynamic, B:Dynamic, ?output:Dynamic, ?lwork:Dynamic = null, ?sort:Dynamic = null, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function rq(a:Dynamic, ?overwrite_a:Dynamic = false, ?lwork:Dynamic = null, ?mode:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function rsf2csf(T:Dynamic, Z:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function schur(a:Dynamic, ?output:Dynamic, ?lwork:Dynamic = null, ?overwrite_a:Dynamic = false, ?sort:Dynamic = null, ?check_finite:Dynamic = true):Dynamic;
	static public function signm(A:Dynamic, ?disp:Dynamic = true):Dynamic;
	static public function sinhm(A:Dynamic):Dynamic;
	static public function sinm(A:Dynamic):Dynamic;
	static public function solve(a:Dynamic, b:Dynamic, ?sym_pos:Dynamic = false, ?lower:Dynamic = false, ?overwrite_a:Dynamic = false, ?overwrite_b:Dynamic = false, ?debug:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function solve_banded(l_and_u:Dynamic, ab:Dynamic, b:Dynamic, ?overwrite_ab:Dynamic = false, ?overwrite_b:Dynamic = false, ?debug:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function solve_circulant(c:Dynamic, b:Dynamic, ?singular:Dynamic, ?tol:Dynamic = null, ?caxis:Dynamic, ?baxis:Dynamic, ?outaxis:Dynamic):Dynamic;
	static public function solve_continuous_are(a:Dynamic, b:Dynamic, q:Dynamic, r:Dynamic):Dynamic;
	static public function solve_discrete_are(a:Dynamic, b:Dynamic, q:Dynamic, r:Dynamic):Dynamic;
	static public function solve_discrete_lyapunov(a:Dynamic, q:Dynamic, ?method:Dynamic = null):Dynamic;
	static public function solve_lyapunov(a:Dynamic, q:Dynamic):Dynamic;
	static public function solve_sylvester(a:Dynamic, b:Dynamic, q:Dynamic):Dynamic;
	static public function solve_toeplitz(c_or_cr:Dynamic, b:Dynamic, ?check_finite:Dynamic = true):Dynamic;
	static public function solve_triangular(a:Dynamic, b:Dynamic, ?trans:Dynamic, ?lower:Dynamic = false, ?unit_diagonal:Dynamic = false, ?overwrite_b:Dynamic = false, ?debug:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function solveh_banded(ab:Dynamic, b:Dynamic, ?overwrite_ab:Dynamic = false, ?overwrite_b:Dynamic = false, ?lower:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function sqrtm(A:Dynamic, ?disp:Dynamic = true, ?blocksize:Dynamic):Dynamic;
	static public function svd(a:Dynamic, ?full_matrices:Dynamic = true, ?compute_uv:Dynamic = true, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function svdvals(a:Dynamic, ?overwrite_a:Dynamic = false, ?check_finite:Dynamic = true):Dynamic;
	static public function tanhm(A:Dynamic):Dynamic;
	static public function tanm(A:Dynamic):Dynamic;
	static public function toeplitz(c:Dynamic, ?r:Dynamic = null):Dynamic;
	static public function tri(N:Dynamic, ?M:Dynamic = null, ?k:Dynamic, ?dtype:Dynamic = null):Dynamic;
	static public function tril(m:Dynamic, ?k:Dynamic):Dynamic;
	static public function triu(m:Dynamic, ?k:Dynamic):Dynamic;
}