/* This file is generated, do not edit! */
package scipy;
@:native("scipy.signal") extern class Signal {
	static public function abcd_normalize(?A:Dynamic = null, ?B:Dynamic = null, ?C:Dynamic = null, ?D:Dynamic = null):Dynamic;
	static public function argrelextrema(data:Dynamic, comparator:Dynamic, ?axis:Dynamic, ?order:Dynamic, ?mode:Dynamic):Dynamic;
	static public function argrelmax(data:Dynamic, ?axis:Dynamic, ?order:Dynamic, ?mode:Dynamic):Dynamic;
	static public function argrelmin(data:Dynamic, ?axis:Dynamic, ?order:Dynamic, ?mode:Dynamic):Dynamic;
	static public function band_stop_obj(wp:Dynamic, ind:Dynamic, passb:Dynamic, stopb:Dynamic, gpass:Dynamic, gstop:Dynamic, type:Dynamic):Dynamic;
	static public function barthann(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function bartlett(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function bessel(N:Dynamic, Wn:Dynamic, ?btype:Dynamic, ?analog:Dynamic = false, ?output:Dynamic):Dynamic;
	static public function besselap(N:Dynamic):Dynamic;
	static public function bilinear(b:Dynamic, a:Dynamic, ?fs:Dynamic):Void;
	static public function blackman(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function blackmanharris(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function bode(system:Dynamic, ?w:Dynamic = null, ?n:Dynamic):Dynamic;
	static public function bohman(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function boxcar(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function bspline(x:Dynamic, n:Dynamic):Void;
	static public function buttap(N:Dynamic):Void;
	static public function butter(N:Dynamic, Wn:Dynamic, ?btype:Dynamic, ?analog:Dynamic = false, ?output:Dynamic):Dynamic;
	static public function buttord(wp:Dynamic, ws:Dynamic, gpass:Dynamic, gstop:Dynamic, ?analog:Dynamic = false):Dynamic;
	static public function cascade(hk:Dynamic, ?J:Dynamic):Dynamic;
	static public function cheb1ap(N:Dynamic, rp:Dynamic):Void;
	static public function cheb1ord(wp:Dynamic, ws:Dynamic, gpass:Dynamic, gstop:Dynamic, ?analog:Dynamic = false):Dynamic;
	static public function cheb2ap(N:Dynamic, rs:Dynamic):Void;
	static public function cheb2ord(wp:Dynamic, ws:Dynamic, gpass:Dynamic, gstop:Dynamic, ?analog:Dynamic = false):Dynamic;
	static public function chebwin(M:Dynamic, at:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function cheby1(N:Dynamic, rp:Dynamic, Wn:Dynamic, ?btype:Dynamic, ?analog:Dynamic = false, ?output:Dynamic):Dynamic;
	static public function cheby2(N:Dynamic, rs:Dynamic, Wn:Dynamic, ?btype:Dynamic, ?analog:Dynamic = false, ?output:Dynamic):Dynamic;
	static public function chirp(t:Dynamic, f0:Dynamic, t1:Dynamic, f1:Dynamic, ?method:Dynamic, ?phi:Dynamic, ?vertex_zero:Dynamic = true):Dynamic;
	static public function cmplx_sort(p:Dynamic):Dynamic;
	static public function coherence(x:Dynamic, y:Dynamic, ?fs:Dynamic, ?window:Dynamic, ?nperseg:Dynamic, ?noverlap:Dynamic = null, ?nfft:Dynamic = null, ?detrend:Dynamic, ?axis:Dynamic):Dynamic;
	static public function cont2discrete(sys:Dynamic, dt:Dynamic, ?method:Dynamic, ?alpha:Dynamic = null):Dynamic;
	static public function convolve(in1:Dynamic, in2:Dynamic, ?mode:Dynamic):Dynamic;
	static public function convolve2d(in1:Dynamic, in2:Dynamic, ?mode:Dynamic, ?boundary:Dynamic, ?fillvalue:Dynamic):Dynamic;
	static public function correlate(in1:Dynamic, in2:Dynamic, ?mode:Dynamic):Dynamic;
	static public function correlate2d(in1:Dynamic, in2:Dynamic, ?mode:Dynamic, ?boundary:Dynamic, ?fillvalue:Dynamic):Dynamic;
	static public function cosine(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function csd(x:Dynamic, y:Dynamic, ?fs:Dynamic, ?window:Dynamic, ?nperseg:Dynamic, ?noverlap:Dynamic = null, ?nfft:Dynamic = null, ?detrend:Dynamic, ?return_onesided:Dynamic = true, ?scaling:Dynamic, ?axis:Dynamic):Dynamic;
	static public function cspline1d(signal:Dynamic, ?lamb:Dynamic):Dynamic;
	static public function cspline1d_eval(cj:Dynamic, newx:Dynamic, ?dx:Dynamic, ?x0:Dynamic):Void;
	static public function cspline2d(args:haxe.extern.Rest<Dynamic>):Void;
	static public function cubic(x:Dynamic):Void;
	static public function cwt(data:Dynamic, wavelet:Dynamic, widths:Dynamic):Dynamic;
	static public function daub(p:Dynamic):Dynamic;
	static public function decimate(x:Dynamic, q:Dynamic, ?n:Dynamic = null, ?ftype:Dynamic, ?axis:Dynamic):Dynamic;
	static public function deconvolve(signal:Dynamic, divisor:Dynamic):Dynamic;
	static public function detrend(data:Dynamic, ?axis:Dynamic, ?type:Dynamic, ?bp:Dynamic):Dynamic;
	static public function dimpulse(system:Dynamic, ?x0:Dynamic = null, ?t:Dynamic = null, ?n:Dynamic = null):Dynamic;
	static public function dlsim(system:Dynamic, u:Dynamic, ?t:Dynamic = null, ?x0:Dynamic = null):Dynamic;
	static public function dstep(system:Dynamic, ?x0:Dynamic = null, ?t:Dynamic = null, ?n:Dynamic = null):Dynamic;
	static public function ellip(N:Dynamic, rp:Dynamic, rs:Dynamic, Wn:Dynamic, ?btype:Dynamic, ?analog:Dynamic = false, ?output:Dynamic):Dynamic;
	static public function ellipap(N:Dynamic, rp:Dynamic, rs:Dynamic):Void;
	static public function ellipord(wp:Dynamic, ws:Dynamic, gpass:Dynamic, gstop:Dynamic, ?analog:Dynamic = false):Dynamic;
	static public function exponential(M:Dynamic, ?center:Dynamic = null, ?tau:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function fftconvolve(in1:Dynamic, in2:Dynamic, ?mode:Dynamic):Dynamic;
	static public function filtfilt(b:Dynamic, a:Dynamic, x:Dynamic, ?axis:Dynamic, ?padtype:Dynamic, ?padlen:Dynamic = null, ?method:Dynamic, ?irlen:Dynamic = null):Dynamic;
	static public function find_peaks_cwt(vector:Dynamic, widths:Dynamic, ?wavelet:Dynamic = null, ?max_distances:Dynamic = null, ?gap_thresh:Dynamic = null, ?min_length:Dynamic = null, ?min_snr:Dynamic, ?noise_perc:Dynamic):Dynamic;
	static public function findfreqs(num:Dynamic, den:Dynamic, N:Dynamic):Dynamic;
	static public function firwin(numtaps:Dynamic, cutoff:Dynamic, ?width:Dynamic = null, ?window:Dynamic, ?pass_zero:Dynamic = true, ?scale:Dynamic = true, ?nyq:Dynamic):Dynamic;
	static public function firwin2(numtaps:Dynamic, freq:Dynamic, gain:Dynamic, ?nfreqs:Dynamic = null, ?window:Dynamic, ?nyq:Dynamic, ?antisymmetric:Dynamic = false):Dynamic;
	static public function flattop(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function freqresp(system:Dynamic, ?w:Dynamic = null, ?n:Dynamic):Dynamic;
	static public function freqs(b:Dynamic, a:Dynamic, ?worN:Dynamic = null, ?plot:Dynamic = null):Dynamic;
	static public function freqz(b:Dynamic, ?a:Dynamic, ?worN:Dynamic = null, ?whole:Dynamic, ?plot:Dynamic = null):Dynamic;
	static public function gauss_spline(x:Dynamic, n:Dynamic):Void;
	static public function gaussian(M:Dynamic, std:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function gausspulse(t:Dynamic, ?fc:Dynamic, ?bw:Dynamic, ?bwr:Dynamic, ?tpr:Dynamic, ?retquad:Dynamic = false, ?retenv:Dynamic = false):Dynamic;
	static public function general_gaussian(M:Dynamic, p:Dynamic, sig:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function get_window(window:Dynamic, Nx:Dynamic, ?fftbins:Dynamic = true):Dynamic;
	static public function group_delay(system:Dynamic, ?w:Dynamic = null, ?whole:Dynamic = false):Dynamic;
	static public function hamming(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function hann(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function hilbert(x:Dynamic, ?N:Dynamic = null, ?axis:Dynamic):Dynamic;
	static public function hilbert2(x:Dynamic, ?N:Dynamic = null):Dynamic;
	static public function iirdesign(wp:Dynamic, ws:Dynamic, gpass:Dynamic, gstop:Dynamic, ?analog:Dynamic = false, ?ftype:Dynamic, ?output:Dynamic):Dynamic;
	static public function iirfilter(N:Dynamic, Wn:Dynamic, ?rp:Dynamic = null, ?rs:Dynamic = null, ?btype:Dynamic, ?analog:Dynamic = false, ?ftype:Dynamic, ?output:Dynamic):Dynamic;
	static public function impulse(system:Dynamic, ?X0:Dynamic = null, ?T:Dynamic = null, ?N:Dynamic = null):Dynamic;
	static public function impulse2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function invres(r:Dynamic, p:Dynamic, k:Dynamic, ?tol:Dynamic, ?rtype:Dynamic):Void;
	static public function invresz(r:Dynamic, p:Dynamic, k:Dynamic, ?tol:Dynamic, ?rtype:Dynamic):Void;
	static public function kaiser(M:Dynamic, beta:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function kaiser_atten(numtaps:Dynamic, width:Dynamic):Dynamic;
	static public function kaiser_beta(a:Dynamic):Dynamic;
	static public function kaiserord(ripple:Dynamic, width:Dynamic):Dynamic;
	static public function lfilter(b:Dynamic, a:Dynamic, x:Dynamic, ?axis:Dynamic, ?zi:Dynamic = null):Dynamic;
	static public function lfilter_zi(b:Dynamic, a:Dynamic):Dynamic;
	static public function lfiltic(b:Dynamic, a:Dynamic, y:Dynamic, ?x:Dynamic = null):Dynamic;
	static public function lombscargle(x:Dynamic, y:Dynamic, freqs:Dynamic):Dynamic;
	static public function lp2bp(b:Dynamic, a:Dynamic, ?wo:Dynamic, ?bw:Dynamic):Void;
	static public function lp2bs(b:Dynamic, a:Dynamic, ?wo:Dynamic, ?bw:Dynamic):Void;
	static public function lp2hp(b:Dynamic, a:Dynamic, ?wo:Dynamic):Void;
	static public function lp2lp(b:Dynamic, a:Dynamic, ?wo:Dynamic):Void;
	static public function lsim(system:Dynamic, U:Dynamic, T:Dynamic, ?X0:Dynamic = null, ?interp:Dynamic = true):Dynamic;
	static public function lsim2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function max_len_seq(nbits:Dynamic, ?state:Dynamic = null, ?length:Dynamic = null, ?taps:Dynamic = null):Dynamic;
	static public function medfilt(volume:Dynamic, ?kernel_size:Dynamic = null):Dynamic;
	static public function medfilt2d(input:Dynamic, ?kernel_size:Dynamic):Dynamic;
	static public function morlet(M:Dynamic, ?w:Dynamic, ?s:Dynamic, ?complete:Dynamic = true):Dynamic;
	static public function normalize(b:Dynamic, a:Dynamic):Void;
	static public function nuttall(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function order_filter(a:Dynamic, domain:Dynamic, rank:Dynamic):Dynamic;
	static public function parzen(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function periodogram(x:Dynamic, ?fs:Dynamic, ?window:Dynamic = null, ?nfft:Dynamic = null, ?detrend:Dynamic, ?return_onesided:Dynamic = true, ?scaling:Dynamic, ?axis:Dynamic):Dynamic;
	static public function place_poles(A:Dynamic, B:Dynamic, poles:Dynamic, ?method:Dynamic, ?rtol:Dynamic, ?maxiter:Dynamic):Dynamic;
	static public function qmf(hk:Dynamic):Void;
	static public function qspline1d(signal:Dynamic, ?lamb:Dynamic):Dynamic;
	static public function qspline1d_eval(cj:Dynamic, newx:Dynamic, ?dx:Dynamic, ?x0:Dynamic):Void;
	static public function qspline2d(args:haxe.extern.Rest<Dynamic>):Void;
	static public function quadratic(x:Dynamic):Void;
	static public function remez(numtaps:Dynamic, bands:Dynamic, desired:Dynamic, ?weight:Dynamic = null, ?Hz:Dynamic, ?type:Dynamic, ?maxiter:Dynamic, ?grid_density:Dynamic):Dynamic;
	static public function resample(x:Dynamic, num:Dynamic, ?t:Dynamic = null, ?axis:Dynamic, ?window:Dynamic = null):Dynamic;
	static public function residue(b:Dynamic, a:Dynamic, ?tol:Dynamic, ?rtype:Dynamic):Dynamic;
	static public function residuez(b:Dynamic, a:Dynamic, ?tol:Dynamic, ?rtype:Dynamic):Void;
	static public function ricker(points:Dynamic, a:Dynamic):Dynamic;
	static public function savgol_coeffs(window_length:Dynamic, polyorder:Dynamic, ?deriv:Dynamic, ?delta:Dynamic, ?pos:Dynamic = null, ?use:Dynamic):Dynamic;
	static public function savgol_filter(x:Dynamic, window_length:Dynamic, polyorder:Dynamic, ?deriv:Dynamic, ?delta:Dynamic, ?axis:Dynamic, ?mode:Dynamic, ?cval:Dynamic):Dynamic;
	static public function sawtooth(t:Dynamic, ?width:Dynamic):Dynamic;
	static public function sepfir2d(input:Dynamic, hrow:Dynamic, hcol:Dynamic):Void;
	static public function slepian(M:Dynamic, width:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function sos2tf(sos:Dynamic):Dynamic;
	static public function sos2zpk(sos:Dynamic):Dynamic;
	static public function sosfilt(sos:Dynamic, x:Dynamic, ?axis:Dynamic, ?zi:Dynamic = null):Dynamic;
	static public function sosfilt_zi(sos:Dynamic):Dynamic;
	static public function spectrogram(x:Dynamic, ?fs:Dynamic):Dynamic;
	static public function spline_filter(Iin:Dynamic, ?lmbda:Dynamic):Void;
	static public function square(t:Dynamic, ?duty:Dynamic):Dynamic;
	static public function ss2tf(A:Dynamic, B:Dynamic, C:Dynamic, D:Dynamic, ?input:Dynamic):Dynamic;
	static public function ss2zpk(A:Dynamic, B:Dynamic, C:Dynamic, D:Dynamic, ?input:Dynamic):Dynamic;
	static public function step(system:Dynamic, ?X0:Dynamic = null, ?T:Dynamic = null, ?N:Dynamic = null):Dynamic;
	static public function step2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function sweep_poly(t:Dynamic, poly:Dynamic, ?phi:Dynamic):Dynamic;
	static public function symiirorder1(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function symiirorder2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function tf2sos(b:Dynamic, a:Dynamic, ?pairing:Dynamic):Dynamic;
	static public function tf2ss(num:Dynamic, den:Dynamic):Dynamic;
	static public function tf2zpk(b:Dynamic, a:Dynamic):Dynamic;
	static public function triang(M:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function tukey(M:Dynamic, ?alpha:Dynamic, ?sym:Dynamic = true):Dynamic;
	static public function unique_roots(p:Dynamic, ?tol:Dynamic, ?rtype:Dynamic):Dynamic;
	static public function vectorstrength(events:Dynamic, period:Dynamic):Dynamic;
	static public function welch(x:Dynamic, ?fs:Dynamic, ?window:Dynamic, ?nperseg:Dynamic, ?noverlap:Dynamic = null, ?nfft:Dynamic = null, ?detrend:Dynamic, ?return_onesided:Dynamic = true, ?scaling:Dynamic, ?axis:Dynamic):Dynamic;
	static public function wiener(im:Dynamic, ?mysize:Dynamic = null, ?noise:Dynamic = null):Dynamic;
	static public function zpk2sos(z:Dynamic, p:Dynamic, k:Dynamic, ?pairing:Dynamic):Dynamic;
	static public function zpk2ss(z:Dynamic, p:Dynamic, k:Dynamic):Dynamic;
	static public function zpk2tf(z:Dynamic, p:Dynamic, k:Dynamic):Dynamic;
}