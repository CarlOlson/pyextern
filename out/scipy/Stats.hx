/* This file is generated, do not edit! */
package scipy;
@:pythonImport("scipy.stats") extern class Stats {
	static public function alpha(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function anderson(x:Dynamic, ?dist:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function anderson_ksamp(samples:Dynamic, ?midrank:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function anglit(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ansari(x:Dynamic, y:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function arcsine(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function bartlett(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function bayes_mvs(data:Dynamic, ?alpha:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function bernoulli(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function beta(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function betaprime(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function binned_statistic(x:Dynamic, values:Dynamic, ?statistic:Dynamic, ?bins:Dynamic, ?range:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function binned_statistic_2d(x:Dynamic, y:Dynamic, values:Dynamic, ?statistic:Dynamic, ?bins:Dynamic, ?range:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function binned_statistic_dd(sample:Dynamic, values:Dynamic, ?statistic:Dynamic, ?bins:Dynamic, ?range:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function binom(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function binom_test(x:Dynamic, ?n:Dynamic = null, ?p:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function boltzmann(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function boxcox(x:Dynamic, ?lmbda:Dynamic = null, ?alpha:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function boxcox_llf(lmb:Dynamic, data:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function boxcox_normmax(x:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function boxcox_normplot(x:Dynamic, la:Dynamic, lb:Dynamic, ?plot:Dynamic = null, ?N:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function bradford(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function burr(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function cauchy(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function chi(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function chi2(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function chi2_contingency(observed:Dynamic, ?correction:Dynamic = true, ?lambda_:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function chisquare(f_obs:Dynamic, ?f_exp:Dynamic = null, ?ddof:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function circmean(samples:Dynamic, ?high:Dynamic, ?low:Dynamic, ?axis:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function circstd(samples:Dynamic, ?high:Dynamic, ?low:Dynamic, ?axis:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function circvar(samples:Dynamic, ?high:Dynamic, ?low:Dynamic, ?axis:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function combine_pvalues(pvalues:Dynamic, ?method:Dynamic, ?weights:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function cosine(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function cumfreq(a:Dynamic, ?numbins:Dynamic, ?defaultreallimits:Dynamic = null, ?weights:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function describe(a:Dynamic, ?axis:Dynamic, ?ddof:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function dgamma(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function dirichlet(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function dlaplace(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function dweibull(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function entropy(pk:Dynamic, ?qk:Dynamic = null, ?base:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function erlang(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function expon(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function exponnorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function exponpow(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function exponweib(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function f(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function f_oneway(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function fatiguelife(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function fisher_exact(table:Dynamic, ?alternative:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function fisk(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function fligner(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function foldcauchy(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function foldnorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function frechet_l(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function frechet_r(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function friedmanchisquare(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gamma(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gausshyper(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function genexpon(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function genextreme(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gengamma(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function genhalflogistic(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function genlogistic(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gennorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function genpareto(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function geom(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gilbrat(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gmean(a:Dynamic, ?axis:Dynamic, ?dtype:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gompertz(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gumbel_l(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function gumbel_r(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function halfcauchy(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function halfgennorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function halflogistic(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function halfnorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function histogram(a:Dynamic, ?numbins:Dynamic, ?defaultlimits:Dynamic = null, ?weights:Dynamic = null, ?printextras:Dynamic = false, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function histogram2(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function hmean(a:Dynamic, ?axis:Dynamic, ?dtype:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function hypergeom(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function hypsecant(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function invgamma(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function invgauss(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function invweibull(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function invwishart(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function itemfreq(a:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function johnsonsb(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function johnsonsu(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kendalltau(x:Dynamic, y:Dynamic, ?initial_lexsort:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kruskal(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ks_2samp(data1:Dynamic, data2:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ksone(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kstat(data:Dynamic, ?n:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kstatvar(data:Dynamic, ?n:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kstest(rvs:Dynamic, cdf:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kstwobign(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kurtosis(a:Dynamic, ?axis:Dynamic, ?fisher:Dynamic = true, ?bias:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function kurtosistest(a:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function laplace(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function levene(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function linregress(x:Dynamic, ?y:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function loggamma(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function logistic(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function loglaplace(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function lognorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function logser(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function lomax(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function mannwhitneyu(x:Dynamic, y:Dynamic, ?use_continuity:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function maxwell(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function median_test(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function mielke(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function mode(a:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function moment(a:Dynamic, ?moment:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function mood(x:Dynamic, y:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function multivariate_normal(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function mvsdist(data:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nakagami(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nanmean(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nanmedian(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nanstd(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nbinom(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ncf(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function nct(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ncx2(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function norm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function normaltest(a:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function obrientransform(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function pareto(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function pearson3(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function pearsonr(x:Dynamic, y:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function percentileofscore(a:Dynamic, score:Dynamic, ?kind:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function planck(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function pointbiserialr(x:Dynamic, y:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function poisson(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function power_divergence(f_obs:Dynamic, ?f_exp:Dynamic = null, ?ddof:Dynamic, ?axis:Dynamic, ?lambda_:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function powerlaw(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function powerlognorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function powernorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ppcc_max(x:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ppcc_plot(x:Dynamic, a:Dynamic, b:Dynamic, ?dist:Dynamic, ?plot:Dynamic = null, ?N:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function probplot(x:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function randint(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function rankdata(a:Dynamic, ?method:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ranksums(x:Dynamic, y:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function rayleigh(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function rdist(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function recipinvgauss(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function reciprocal(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function relfreq(a:Dynamic, ?numbins:Dynamic, ?defaultreallimits:Dynamic = null, ?weights:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function rice(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function scoreatpercentile(a:Dynamic, per:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function sem(a:Dynamic, ?axis:Dynamic, ?ddof:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function semicircular(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function shapiro(x:Dynamic, ?a:Dynamic = null, ?reta:Dynamic = false, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function sigmaclip(a:Dynamic, ?low:Dynamic, ?high:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function signaltonoise(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function skellam(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function skew(a:Dynamic, ?axis:Dynamic, ?bias:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function skewtest(a:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function spearmanr(a:Dynamic, ?b:Dynamic = null, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function t(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function theilslopes(y:Dynamic, ?x:Dynamic = null, ?alpha:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function threshold(a:Dynamic, ?threshmin:Dynamic = null, ?threshmax:Dynamic = null, ?newval:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tiecorrect(rankvals:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tmax(a:Dynamic, ?upperlimit:Dynamic = null, ?axis:Dynamic, ?inclusive:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tmean(a:Dynamic, ?limits:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tmin(a:Dynamic, ?lowerlimit:Dynamic = null, ?axis:Dynamic, ?inclusive:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function triang(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function trim1(a:Dynamic, proportiontocut:Dynamic, ?tail:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function trimboth(a:Dynamic, proportiontocut:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function truncexpon(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function truncnorm(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tsem(a:Dynamic, ?limits:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tstd(a:Dynamic, ?limits:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ttest_1samp(a:Dynamic, popmean:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ttest_ind(a:Dynamic, b:Dynamic, ?axis:Dynamic, ?equal_var:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ttest_ind_from_stats(mean1:Dynamic, std1:Dynamic, nobs1:Dynamic, mean2:Dynamic, std2:Dynamic, nobs2:Dynamic, ?equal_var:Dynamic = true, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function ttest_rel(a:Dynamic, b:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tukeylambda(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function tvar(a:Dynamic, ?limits:Dynamic = null, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function uniform(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function variation(a:Dynamic, ?axis:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function vonmises(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function wald(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function weibull_max(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function weibull_min(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function wilcoxon(x:Dynamic, ?y:Dynamic = null, ?zero_method:Dynamic, ?correction:Dynamic = false, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function wishart(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function wrapcauchy(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function zipf(?varargs:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function zmap(scores:Dynamic, compare:Dynamic, ?axis:Dynamic, ?ddof:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	static public function zscore(a:Dynamic, ?axis:Dynamic, ?ddof:Dynamic, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
}